[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "foundry-pipeline-assistant"
version = "0.1.0"
description = "A pipeline assistant for Foundry data workflows"
authors = ["Jeroen Verhoeven <jeroen@example.com>"]
license = "MIT"
readme = "README.md"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
]

[tool.poetry.dependencies]
python = "^3.13"
python-dotenv = "*"
httpx = "*"
pydantic = "*"
click = "*"
typing-extensions = "*"
azure-ai-projects = "~1.0.0b11"
azure-identity = "~1.20.0"
ansible-core = "~2.17.0"

[tool.poetry.scripts]
foundry-pipeline-assistant = "foundry_pipeline_assistant:main"

[tool.poetry.group.dev.dependencies]
pytest = "*"
requests-mock = "*"
ruff = "*"

[tool.poetry.urls]
"Homepage" = "https://github.com/dajoen/foundry-pipeline-assistant"
"Repository" = "https://github.com/dajoen/foundry-pipeline-assistant.git"
"Issues" = "https://github.com/dajoen/foundry-pipeline-assistant/issues"

[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --tb=short"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]